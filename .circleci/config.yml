version: 2

aliases:
  # -------------------------
  #      ALIASES: Caches
  # -------------------------
  - &restore-deps-cache
    key: deps-cache-{{ checksum "package.json" }}

  - &save-deps-cache
    key: deps-cache-{{ checksum "package.json" }}
    paths:
      - ~/project/node_modules

  # -------------------------
  #  ALIASES: Branch Filters
  # -------------------------
  - &filter-only-master
    branches:
      only: master
  - &filter-only-semantic-pr
    branches:
      only:  /^(pull|fix|feat|dependabot)\/.*$/

defaults: &defaults
  working_directory: ~/project

jobs:
  test:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache: *restore-deps-cache
      - run: npm install
      - run: npm install codecov
      - run: npm test
      - run: ./node_modules/.bin/codecov
      - save_cache: *save-deps-cache

  build:
    <<: *defaults
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore_cache: *restore-deps-cache
      - run: npm install
      - run: npm run build
      - save_cache: *save-deps-cache

  release:
    <<: *defaults
    docker:
      - image: circleci/python:2.7-stretch
    steps:
      - checkout
      - restore_cache: *restore-deps-cache
      - run:
          name: Apt Update
          command: |
            sudo apt-get update
            sudo apt-get install software-properties-common
      - run:
          name: Install Rust
          command: |
            curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y;
            echo 'source $HOME/.cargo/env' >> $HOME/.bashrc
            source $HOME/.cargo/env
      - run:
          name: Install Headless Chrome dependencies
          command: |
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget git
      - run:
          name: "Update Node.js and npm"
          command: |
            curl -sSL "https://nodejs.org/dist/v10.18.0/node-v10.18.0-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v10.18.0-linux-x64/bin/node
            curl https://www.npmjs.com/install.sh | sudo bash
      - run: sudo apt-get install -y graphviz
      - run:
          name: Cargo install svgbob
          command:
            export PATH=~/.cargo/bin:$PATH;
            cargo install svgbob_cli
      - run: npm install
      - run: npm run build
      - run: npm run build:sdk
      - run: cd generated/docs/gatsby && npm install && npm run build && cd ../../../
      - run: npm install semantic-release @semantic-release/exec @semantic-release/changelog @semantic-release/git @semantic-release/github @semantic-release/npm @semantic-release/commit-analyzer @semantic-release/release-notes-generator @qiwi/semantic-release-gh-pages-plugin @open-rpc/semantic-release-plugin
      - run: git checkout .
      - run: ./node_modules/.bin/semantic-release
      - run:
         name: Install awscli
         command: sudo pip install awscli
      - run:
          name: Deploy to S3
          command: aws s3 sync generated/docs/gatsby/public/ s3://docs.sig.tools/ --delete
      - run:
          name: invalidate cloudfront
          command: aws cloudfront create-invalidation --distribution-id EG5W6SGNHL2D9 --paths '/*'
      - save_cache: *save-deps-cache

workflows:
  version: 2
  analysis:
    jobs:
      - test:
          filters: *filter-only-semantic-pr
      - build:
          filters: *filter-only-semantic-pr

  release:
    jobs:
      - test:
          filters: *filter-only-master
      - build:
          filters: *filter-only-master
      - hold:
          filters: *filter-only-master
          type: approval
          requires:
            - test
            - build
      - release:
          filters: *filter-only-master
          requires:
            - hold
